{"meta":{"title":"Landscape -- PeterZ","subtitle":null,"description":null,"author":"Peter Zheng","url":"https://anix30.github.io"},"pages":[{"title":"about","date":"2019-05-16T06:12:49.000Z","updated":"2019-05-16T06:12:50.000Z","comments":true,"path":"about/index.html","permalink":"https://anix30.github.io/about/index.html","excerpt":"","text":""}],"posts":[{"title":"Use Hexo to Deploy to GitHub Pages","slug":"Use-hexo-to-deploy-to-GitHub-Pages","date":"2019-05-16T02:21:33.000Z","updated":"2019-05-16T11:38:22.000Z","comments":true,"path":"Use-hexo-to-deploy-to-GitHub-Pages/","link":"","permalink":"https://anix30.github.io/Use-hexo-to-deploy-to-GitHub-Pages/","excerpt":"","text":"Hexo DocumentsHexo troubleshooting The Enviroment Windows 10 or Mac 10.14 Mojave Node.js 10.15 npm 6.4 git 2.16 1 – Create a Project for GitHub PagesThe official tutorial for create a GitHub Pages First you have to create a repository whose name must be ‘username.github.io’. If you already have a github account, you can create repository directly, else you need to register a new github accout first.Head over to GitHub and create a new repository named ‘username.github.io’, where username is your username (or organization name) on GitHub.Then the ‘username.github.io’ is your website address, and this is also your hexo projectname. If the first part of the repository doesn’t exactly match your username, it won’t work, so make sure to get it right. 2 – Install Hexo1$ sudo npm install -g hexo-cli 3 – Initialize the Hexo projectGo to the folder where you want to store hexo.1$ hexo init [projectname] 4 – Clone the repositoryGo to the folder where you want to store your project, and clone the new repository: 1$ git clone https://github.com/username/username.github.io Copy all the files from your hexo folder into github pages project folder. 5 – Run a test server for your page on Mac12$ cd [project isolate or reletive path]$ hexo server 6 – Set information for your new blogLook for the document about how to set information of your blog1234567891011121314151617$ vi _config.yml~~~~~~~~~~~~~~~~~~ _config.yml ~~~~~~~~~~~~~~~~~~# Sitetitle: [The title of your website]subtitle:[The subtitle of your website]description: [The description of your website]author: [Your name]language: zh, entimezone: Asia/Shanghai# URL## If your site is put in a subdirectory, set url as 'http://yoursite.com/child' and root as '/child/'url: http://yourusername.github.io/root: /permalink: :year/:month/:day/:title/permalink_defaults: 7 – Set information to use Git Install the plugin for deploy the blog by git12$ cd [project isolate or reletive path]$ npm install hexo-deployer-git --save Set _config.yml12345678$ vi _config.yml~~~~~~~~~~~~~~~~~~ _config.yml ~~~~~~~~~~~~~~~~~~# Deployment## Docs: http://hexo.io/docs/deployment.htmldeploy: type: git repo: git@github.com:yourusername/yourusername.github.io.git branch: master Relace the repo and brench with your own. Note: sometimes there will be an error while you want to deploy to GitHub Pages.12345678$ hexo deployFATAL Something\\'s wrong. Maybe you can find the solution here: http://hexo.io/docs/troubleshooting.htmlError: Spawn failedat ChildProcess. (D:\\Hexo\\Hexo\\node_modules\\hexo-util\\lib\\spawn.js:52:19)at ChildProcess.emit (events.js:189:13)at ChildProcess.cp.emit (D:\\Hexo\\Hexo\\node_modules\\cross-spawn\\lib\\enoent.js:40:29)at Process.ChildProcess._handle.onexit (internal/child_process.js:248:12) To fix this error, can go to the troubleshooting. (https://github.com/hexojs/hexo/issues/3449) 8 – Create a new post file1$ hexo n [layout] &lt;filename&gt; Next is the structure of the project folder.1234567891011121314.├── .deploy├── public├── scaffolds| ├── draft.md| ├── page.md| └── post.md├── scripts├── source| ├── _drafts| └── _posts├── themes├── _config.yml└── package.json 9 – GenerateGenerating static files with Hexo.This will create the .html .css .js files in public folder.1$ hexo generate Hexo can watch for file changes and regenerate files immediately. Hexo will compare the SHA1 checksum of your files and only write if file changes are detected.1$ hexo generate --watch 10 – Deploy new blog(https://hexo.io/docs/deployment.html)1$ hexo deploy Before your first deployment, make sure that you have modified the deployment settings in _config.yml.See ‘7 – Set information to use Git’ (Optional)Before deployment, you can clean the cache first.12$ hexo clean$ hexo deploy 11 – Change the themeSearch the theme you want in (https://hexo.io/themes/).In terminal(Unix) or powershell(windows 10), change current work directory to the root of your project folder.12345678910111213$ git clone [The github repository address of the theme you want]# for example## download the theme code$ git clone https://github.com/cgmartin/hexo-theme-bootstrap-blog.git themes/bootstrap-blog## Set information to use the theme$ vi _config.yml~~~~~~~~~~~~~~~~~~ _config.yml ~~~~~~~~~~~~~~~~~~# Extensions## Plugins: https://hexo.io/plugins/## Themes: https://hexo.io/themes/### replace the name of theme with what you wanttheme: bootstrap-blog print1print('Hello World!')","categories":[{"name":"Technique","slug":"Technique","permalink":"https://anix30.github.io/categories/Technique/"}],"tags":[{"name":"Hexo deployment","slug":"Hexo-deployment","permalink":"https://anix30.github.io/tags/Hexo-deployment/"}],"keywords":[{"name":"Technique","slug":"Technique","permalink":"https://anix30.github.io/categories/Technique/"}]}]}