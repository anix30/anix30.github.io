{"meta":{"title":"Landscape -- PeterZ","subtitle":null,"description":null,"author":"Peter Zheng","url":"https//anix30.github.io"},"pages":[{"title":"about","date":"2019-05-16T06:12:49.000Z","updated":"2019-05-16T06:12:49.255Z","comments":true,"path":"about/index.html","permalink":"https//anix30.github.io/about/index.html","excerpt":"","text":""}],"posts":[{"title":"Use hexo to deploy to GitHub Pages","slug":"Use-hexo-to-deploy-to-GitHub-Pages","date":"2019-05-16T02:21:33.000Z","updated":"2019-05-16T06:08:06.067Z","comments":true,"path":"Use-hexo-to-deploy-to-GitHub-Pages/","link":"","permalink":"https//anix30.github.io/Use-hexo-to-deploy-to-GitHub-Pages/","excerpt":"","text":"Hexo DocumentsHexo troubleshooting The Enviroment Windows 10 or Mac Mojave Node.js npm git 1 – Create a project for GitHub PagesCreate a github page from scratchThe official tutorial Create a repositoryIf you already have a github account, you can create repository directly, else you need to register a new github accout first.Head over to GitHub and create a new repository named ‘username.github.io’, where username is your username (or organization name) on GitHub.Then the ‘username.github.io’ is your website address, and this is also your hexo projectname. If the first part of the repository doesn’t exactly match your username, it won’t work, so make sure to get it right. 2 – Install Hexo1$ sudo npm install -g hexo-cli 3 – Initialize the Hexo projectGo to the folder where you want to store hexo.1$ hexo init [projectname] 4 – Clone the repositoryGo to the folder where you want to store your project, and clone the new repository: 1$ git clone https://github.com/username/username.github.io Copy all the files from your hexo folder into github pages project folder. 5 – Run a test server for your page on Mac12$ cd [project isolate or reletive path]$ hexo server 6 – Set information for your new blogLook for the document about how to set information of your blog1234567891011121314151617$ vi _config.yml~~~~~~~~~~~~~~~~~~ _config.yml ~~~~~~~~~~~~~~~~~~# Sitetitle: [The title of your website]subtitle:[The subtitle of your website]description: [The description of your website]author: [Your name]language: zh, entimezone: Asia/Shanghai# URL## If your site is put in a subdirectory, set url as 'http://yoursite.com/child' and root as '/child/'url: http://yourusername.github.io/root: /permalink: :year/:month/:day/:title/permalink_defaults: 7 – Set information to use Gitinstall the plugin for deploy the blog by git12$ cd [project isolate or reletive path]$ npm install hexo-deployer-git --save set _config.yml12345678$ vi _config.yml~~~~~~~~~~~~~~~~~~ _config.yml ~~~~~~~~~~~~~~~~~~# Deployment## Docs: http://hexo.io/docs/deployment.htmldeploy: type: git repo: git@github.com:yourusername/yourusername.github.io.git branch: master Relace the repo and brench with your own. Note: sometimes there will be an error while you want to deploy to GitHub Pages.12345678$ hexo deployFATAL Something\\'s wrong. Maybe you can find the solution here: http://hexo.io/docs/troubleshooting.htmlError: Spawn failedat ChildProcess. (D:\\Hexo\\Hexo\\node_modules\\hexo-util\\lib\\spawn.js:52:19)at ChildProcess.emit (events.js:189:13)at ChildProcess.cp.emit (D:\\Hexo\\Hexo\\node_modules\\cross-spawn\\lib\\enoent.js:40:29)at Process.ChildProcess._handle.onexit (internal/child_process.js:248:12) To fix this error, can go to the troubleshooting. (https://github.com/hexojs/hexo/issues/3449) 8 – Create a new post file1$ hexo n [layout] &lt;filename&gt; Next is the structure of the project folder.1234567891011121314.├── .deploy├── public├── scaffolds| ├── draft.md| ├── page.md| └── post.md├── scripts├── source| ├── _drafts| └── _posts├── themes├── _config.yml└── package.json 9 – GenerateGenerating static files with Hexo.This will create the .html .css .js files in public folder.1$ hexo generate Hexo can watch for file changes and regenerate files immediately. Hexo will compare the SHA1 checksum of your files and only write if file changes are detected.1$ hexo generate --watch 10 – Deploy new blog(https://hexo.io/docs/deployment.html)1$ hexo deploy Before your first deployment, make sure that you have modified the deployment settings in _config.yml.See ‘7 – Set information to use Git’ (Optional)Before deployment, you can clean the cache first.12$ hexo clean$ hexo deploy 11 – Change the themeSearch the theme you want in (https://hexo.io/themes/).In terminal(Unix) or powershell(windows 10), change current work directory to the root of your project folder.12345678910111213$ git clone [The github repository address of the theme you want]# for example## download the theme code$ git clone https://github.com/cgmartin/hexo-theme-bootstrap-blog.git themes/bootstrap-blog## Set information to use the theme$ vi _config.yml~~~~~~~~~~~~~~~~~~ _config.yml ~~~~~~~~~~~~~~~~~~# Extensions## Plugins: https://hexo.io/plugins/## Themes: https://hexo.io/themes/### replace the name of theme with what you wanttheme: bootstrap-blog","categories":[{"name":"Technique","slug":"Technique","permalink":"https//anix30.github.io/categories/Technique/"}],"tags":[{"name":"Hexo deployment","slug":"Hexo-deployment","permalink":"https//anix30.github.io/tags/Hexo-deployment/"}],"keywords":[{"name":"Technique","slug":"Technique","permalink":"https//anix30.github.io/categories/Technique/"}]},{"title":"Simple hexo command","slug":"hello-world","date":"2019-05-16T00:41:01.053Z","updated":"2019-05-16T02:23:41.895Z","comments":true,"path":"hello-world/","link":"","permalink":"https//anix30.github.io/hello-world/","excerpt":"","text":"Hexo DocumentsHexo troubleshooting Quick StartCreate a new post1$ hexo new \"My New Post\" More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment","categories":[],"tags":[],"keywords":[]},{"title":"hexo-theme-bootstrap-blog","slug":"hexo-theme-bootstrap-blog","date":"2019-05-14T23:32:58.000Z","updated":"2019-05-14T23:34:10.565Z","comments":true,"path":"hexo-theme-bootstrap-blog/","link":"","permalink":"https//anix30.github.io/hexo-theme-bootstrap-blog/","excerpt":"","text":"hexo-theme-bootstrap-blogA simple Bootstrap v3 blog theme for Hexo. Based on the official Bootstrap Blog example template. Demo site | More Information Setup InstructionsInstallThis theme requires Hexo 2.4 and above. 1) Install theme: 1$ git clone https://github.com/cgmartin/hexo-theme-bootstrap-blog.git themes/bootstrap-blog 2) (optional) Install hexo-tag-bootstrap for more Bootstrap tags (textcolors, buttons, labels, badges, etc.): 1$ npm install hexo-tag-bootstrap --save 3) (optional) Install hexo-tag-fontawesome for placing Font Awesome icons in your Markdown: 1$ npm install hexo-tag-fontawesome --save EnableModify the theme setting in _config.yml to bootstrap-blog. Update12cd themes/bootstrap-bloggit pull Configuration12345678910111213141516171819202122232425262728293031# File: themes/bootstrap-blog/_config.yml# Headernavbar_brand: falsemenu: Home: index.html Archives: archives/rss: /atom.xml# Contentexcerpt_link: Read Morefancybox: true# Sidebarwidgets:- about # See also: `about_content`- category- tag- tagcloud- archives- recent_postsabout_widget_content: &gt; &lt;p&gt;Etiam porta &lt;em&gt;sem malesuada magna&lt;/em&gt; mollis euismod. Cras mattis consectetur purus sit amet fermentum. Aenean lacinia bibendum nulla sed consectetur.&lt;/p&gt;# Miscellaneousgoogle_analytics:favicon:twitter:google_plus: navbar_brand - The HTML content for an optional “navbar-brand”. Can be text or an image. false to hide. menu - Navigation menu (map of Titles to URLs) rss - RSS link (ie. “/atom.xml”) excerpt_link - “Read More” link at the bottom of excerpted articles. false to hide the link. fancybox - Enable Fancybox for images widgets - Enable sidebar widgets (more info below) about_widget_content - The HTML content for the “About” sidebar widget (more info below) google_analytics - Google Analytics ID favicon - Favicon path (ie. ‘/favicon.ico’) twitter_id - Twitter ID of the author (ie. @c_g_martin) google_plus - Google+ profile link Instead of editing the layout’s configuration file directly, you can override the theme settings from your project’s root _config.yml, ie.:12345678910111213141516theme_config: # Header navbar_brand: &lt;img src=\"/navbrand.png\"&gt; menu: Home: index.html Archives: archives/ 'Another Page': page/index.html widgets: - about - category - archive - recent_posts - tag about_widget_content: &gt; &lt;p&gt;This is &lt;strong&gt;custom content&lt;/strong&gt; for the \"about\" sidebar widget.&lt;/p&gt; FeaturesFront-Matter ExtrasOptional settings in the front-matter can be added for various effects:123456---author: Author Name # displays the post's authorphotos: # displays a Bootstrap thumbnail gallery- images/HNCK0537.jpg- images/HNCK6173.jpg--- FancyboxThis theme uses Fancybox to showcase your photos. You can use the image Markdown syntax or fancybox tag plugin to add your photos. Usage:12345![img caption](img url)~or~&#123;% fancybox img_url [img_thumbnail] [img_caption] %&#125; CalloutsA custom tag for the Bootstrap “callout” style is available for use. Usage:123&#123;% callout [type:default|primary|success|info|warning|danger] %&#125;...content...&#123;% endcallout %&#125; Example:1234&#123;% callout info %&#125;#### &#123;% fa info-circle %&#125; Info tipThis is some callout content&#123;% endcallout %&#125; SidebarThis theme provides 6 built-in widgets that can be displayed in the sidebar: about * category tag tagcloud archives recent_posts All widgets are enabled and displayed by default. You can toggle them on/off with the widgets setting in the theme’s _config.yml. * NOTE: The “about” widget contains static Lorem Ipsum text by default. You’ll want to edit the about_widget_content setting for your site or disable the widget in the theme config. You can also modify the widget file itself to include contents from a Markdown page:12345&lt;!-- file: ./layout/_widget/about.ejs --&gt;&lt;div class=\"sidebar-module sidebar-module-inset\"&gt; &lt;h4&gt;About&lt;/h4&gt; &lt;%- site.pages['data'].find(function(p) &#123; return p.path === 'about/index.html'; &#125;).content %&gt;&lt;/div&gt; …then run hexo new page about to create the Markdown page. Bootstrap Paginator HelperA custom bs_paginator() helper is used to produce Bootstrap-compatible pagination markup. It is a drop-in replacement for Hexo’s built-in paginator(). 1234&lt;%- bs_paginator(&#123; prev_text: &apos;&lt;i class=&quot;fa fa-chevron-left&quot;&gt;&lt;/i&gt; Prev&apos;, next_text: &apos;Next &lt;i class=&quot;fa fa-chevron-right&quot;&gt;&lt;/i&gt;&apos; &#125;) %&gt; DevelopmentThe default Landscape Hexo theme was used as the starting point and heavily edited for this theme. The Landscape Stylus styles have been replaced with standard CSS files which override bootstrap.min.css. Stylus is used only for bundling the CSS files. Feel free to convert the CSS to your pre-processor of choice (Stylus, LESS, Sass, etc.). LicenseMIT License Copyright © 2016 Christopher Martin","categories":[],"tags":[],"keywords":[]}]}